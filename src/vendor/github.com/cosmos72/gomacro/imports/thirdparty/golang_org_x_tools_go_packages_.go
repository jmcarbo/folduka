// this file was generated by gomacro command: import "golang.org/x/tools/go/packages"
// DO NOT EDIT! Any change will be lost when the file is re-generated

package thirdparty

import (
	. "reflect"

	packages_ "golang.org/x/tools/go/packages"
)

// reflection: allow interpreted code to import "golang.org/x/tools/go/packages"
func init() {
	Packages["golang.org/x/tools/go/packages"] = Package{
		Name: "packages",
		Binds: map[string]Value{
			"ListError":           ValueOf(packages_.ListError),
			"Load":                ValueOf(packages_.Load),
			"LoadAllSyntax":       ValueOf(packages_.LoadAllSyntax),
			"LoadFiles":           ValueOf(packages_.LoadFiles),
			"LoadImports":         ValueOf(packages_.LoadImports),
			"LoadSyntax":          ValueOf(packages_.LoadSyntax),
			"LoadTypes":           ValueOf(packages_.LoadTypes),
			"NeedCompiledGoFiles": ValueOf(packages_.NeedCompiledGoFiles),
			"NeedDeps":            ValueOf(packages_.NeedDeps),
			"NeedExportsFile":     ValueOf(packages_.NeedExportsFile),
			"NeedFiles":           ValueOf(packages_.NeedFiles),
			"NeedImports":         ValueOf(packages_.NeedImports),
			"NeedName":            ValueOf(packages_.NeedName),
			"NeedSyntax":          ValueOf(packages_.NeedSyntax),
			"NeedTypes":           ValueOf(packages_.NeedTypes),
			"NeedTypesInfo":       ValueOf(packages_.NeedTypesInfo),
			"NeedTypesSizes":      ValueOf(packages_.NeedTypesSizes),
			"ParseError":          ValueOf(packages_.ParseError),
			"PrintErrors":         ValueOf(packages_.PrintErrors),
			"TypeError":           ValueOf(packages_.TypeError),
			"UnknownError":        ValueOf(packages_.UnknownError),
			"Visit":               ValueOf(packages_.Visit),
		}, Types: map[string]Type{
			"Config":    TypeOf((*packages_.Config)(nil)).Elem(),
			"Error":     TypeOf((*packages_.Error)(nil)).Elem(),
			"ErrorKind": TypeOf((*packages_.ErrorKind)(nil)).Elem(),
			"LoadMode":  TypeOf((*packages_.LoadMode)(nil)).Elem(),
			"Package":   TypeOf((*packages_.Package)(nil)).Elem(),
		},
	}
}
